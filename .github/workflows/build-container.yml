name: "Build Containers on Update"

on:
  # pull_request: []
  #  branches:
  #    - update-*
  push:
    branches: add/container-find
      
jobs:
  build-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
        
      - name: Run Build Config
        uses: autamus/buildconfig@v0.0.1
        with:
          parsers_loaded: spack
          packages_path: spack/
      
      - name: Save Package Output
        run: |
          echo "::set-output name=package::$(cat package)"
          echo "::set-output name=version::$(cat version)"


  spack-containerize:
    runs-on: ubuntu-latest
    needs: build-config
    container:
      image: spack/ubuntu-bionic
      options: --entrypoint /bin/bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Import Registry to Spack
        run: |
          for file in spack/*/*; do
            if [ -d "$file" ]; then
                cp -r "$file/" "/opt/spack/var/spack/repos/builtin/packages/"
            fi
          done

      - name: Generate Spack Environment Dockerfile
        run: |
          export PATH=/opt/spack/bin:$PATH
          # TODO how do we get package from pull request that needs update?
          package= ${{ needs.build-config.outputs.package }}
          echo "spack:" > spack.yaml
          echo "  specs: [\"$package\"]" >> spack.yaml
          echo "  view: true" >> spack.yaml

          cat spack.yaml
          spack containerize > Dockerfile

      - name: Upload Dockerfile
        uses: actions/upload-artifact@v2
        with:
          name: Dockerfile
          path: Dockerfile
           
  build-container:
    needs: spack-containerize
    runs-on: ubuntu-latest
    steps:
      - name: Download Dockerfile
        uses: actions/download-artifact@v2
        with:
          name: Dockerfile
      - name: Build Dockerfile for package
        run: |
           cat Dockerfile
           ls
           # TODO: can use GITHUB_SHA to get tag with commit
           docker build -t ghcr.io/autamus/wget:latest .

      - name: 
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      # TODO: add commit as tag?
      - name: Push to GitHub Packages
        run: docker push ghcr.io/autamus/${{ needs.build-config.outputs.package }}:latest
